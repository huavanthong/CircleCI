name: Release

on:
  push:
    tags:
      - "rel/aio/*.*.*.*"
  pull_request:
    types:
      - closed
      - opened
      - synchronize
    branches: 
      - master
  workflow_call:
  
  workflow_dispatch:
    
env:
  GH_TOKEN: ${{ github.token }}

jobs:
  display-variables:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set environment variable in job A
        run: echo "MY_ENV_VAR=example_value_hello" >> $GITHUB_ENV
  
  # call-build-process:
  #   needs: [display-variables]
  #   uses: huavanthong/CircleCI/.github/workflows/build.yml@master
      
  update-control-file:
    name: Update content
    runs-on: ubuntu-latest
    # needs: [call-build-process]
    if: ${{ github.ref_type == 'tag' }}
    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Set Up Git User
      run: |
        git config user.email "huavanthong14@gmail.com"
        git config user.name "Thong Hua"

    - name: Checkout automation branch
      run: |
        tag_branch=htv3hc/feat/tag-version-0.0.2
        echo $tag_branch > tag_branch.txt
    
        git checkout -b $tag_branch  

    - name: Update contents
      run: |
        echo tag-$(date +%d.%m.%Y-%H.%M.%S) > content.txt
      
    - name: Commit Changes
      run: |
        tag_branch=$(cat tag_branch.txt)
        git add content.txt
        git commit -m "Auto commit from GitHub Actions"
        git push -u -f origin $tag_branch

    - name: Create Pull Request
      run: |
        tag_branch=$(cat tag_branch.txt)
        pr_exists=$(gh pr list --state open | grep -qw "Auto-generated PR" && echo "found" || echo "not found")
        echo "PR Exists: $pr_exists"
        # Github CLI for pull request.
        if [ "$pr_exists" == "not found" ]; then
          # Pull request not exist
          echo "Pull request not found. Creating a new one..."
          gh pr create \
          --base master --head $tag_branch \
          --title "Auto-generated PR" \
          --body "This PR was automatically generated by GitHub Actions." \
          --assignee huavanthong \
          --reviewer huavanthong
        else
          # Pull request đã tồn tại, thông báo và không thực hiện thêm hành động
          echo "Pull request already exists. Skipping..."
        fi

    - name: Create commit for Golang
      if: ${{ github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/rel/aio/') }}
      run: |
        cd ../        
        echo "Cloning microservice-golang source ......"
        git clone https://github.com/huavanthong/microservice-golang.git
        cd microservice-golang
        echo "You are working space in microservice-golang"
        git status

        echo "Git Status Done"
        doc_branch=htv3hc/feat/auto-update-doc
        echo $doc_branch
        git checkout -b $doc_branch

        echo "Setting user DONE"
        git config user.email "huavanthong14@gmail.com"
        git config user.name "Thong Hua"
        git config --list
        # git config credential.helper "store --file=.git/credentials"
        # echo "https://github.com/username/repo.git:${{ secrets.ACTIONS_KEY }}" > .git/credentials

        echo "Add repository for remoting"
        git remote add other-repo https://${{ secrets.ACTIONS_KEY }}@github.com/huavanthong/microservice-golang.git
        git remote -v 

        echo "Modify for commit"
        echo "Hello world" >> README.md
        git status
        echo "Add all changes"
        git add -u
        git commit -m "Auto update documents in robotframework"
        echo "Commit done"
        git push -u -f other-repo $doc_branch

        echo "Push code successfully"
        
        # echo "Check all environment for permission"
        # echo "GitHub Token: $GITHUB_TOKEN"
        # echo "Permissions: $(env)"
        echo "GitHub CLI Version: $(gh --version)"

        # echo "Create pull request to another repos"
        # gh pr create \
        #   --base master --head $doc_branch \
        #   --title "Auto-generated PR for documents" \
        #   --body "This PR was automatically generated by GitHub Actions." \
        #   --assignee huavanthong \
        #   --reviewer huavanthong \
        #   --repo huavanthong/microservice-golang
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Trigger to update document
      if: ${{ github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/rel/aio/') }}
      run: |
        curl -X POST https://api.github.com/repos/huavanthong/microservice-golang/dispatches \
        --header 'authorization: Bearer ${{ secrets.ACTIONS_KEY }}' \
        -H 'Accept: application/vnd.github.everest-preview+json' \
        --data '{"event_type": "Document", "client_payload": { "repository": "'"$GITHUB_REPOSITORY"'", "branch" : "htv3hc/feat/auto-update-doc"}}'